% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/convert_put.R
\name{convert_put}
\alias{convert_put}
\title{Convertit du code SAS (put) en code R}
\usage{
convert_put(
  sas_pgm,
  style = c("dplyr", "base"),
  fmt_list = "<fmt>",
  file = NULL,
  quiet = FALSE
)
}
\arguments{
\item{sas_pgm}{un programme SAS sous la forme d'un vecteur de chaînes de
caractères.}

\item{style}{forme du code généré : \code{"dplyr"} (défaut) ou \code{"base"}. Voir
section 'Details'.}

\item{fmt_list}{nom de la liste créée auparavant par \link{from_tab} ou \link{from_pgm}
(sous forme de chaîne de caractères).}

\item{file}{par défaut, le résultat est affiché dans la console. Spécifier
un nom de fichier pour une sauvegarde disque.}

\item{quiet}{pour désactiver certains avertissements.}
}
\value{
La fonction écrit le résultat dans la console ou dans un fichier. La
chaîne de caractères correspondante est de plus retournée sous forme de
vecteur caractère (de manière invisible).
}
\description{
Convertit les instructions de la forme \verb{NEW = put(OLD, $var.);} d'un
programme SAS en leur équivalent en R.
}
\details{
La fonction recherche le motif ci-dessus quel que soit l'endroit où il
apparaît dans le programme, hormis dans un commentaire. Les espaces et sauts
de lignes sont sont sans importance dans la détection des instructions.

Deux styles sont possibles pour le code R généré :
\itemize{
\item \code{"dplyr"} génère des instructions de type
\verb{mutate(NEW = <fmt>$var[OLD], ...)}
\item \code{"base"} génère une syntaxe standard
\verb{<donnees>$NEW <- <fmt>$var[<donnees>$OLD]}
}
}
\examples{
test_pgm <- readLines(
  system.file("extdata", "pgm_format_test.sas", package = "fmtsas")
)
cat(tail(test_pgm), sep = "\n")

convert_put(test_pgm, style = "dplyr")
convert_put(test_pgm, style = "base")
}
