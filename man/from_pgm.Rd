% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/from_pgm.R
\name{from_pgm}
\alias{from_pgm}
\title{Convertit un programme de formats SAS}
\usage{
from_pgm(sas_pgm, other = ".", quote = c("double", "simple"),
  source = FALSE)
}
\arguments{
\item{sas_pgm}{un programme SAS sous la forme d'un vecteur de chaînes de
caractères.}

\item{other}{nom associé à la modalité spéciale \code{other}, par défaut \code{"."}
(voir section 'Details').}

\item{quote}{type de guillemet. SAS autorise deux types de guillemets pour
décrire une chaîne de caractère. La fonction suppose que des guillemets
doubles sont utilisés ("). Dans le cas contraire ('), spécifier
\code{quote = "simple"}.}

\item{source}{conserver le code SAS dans un attribut \code{"source"} du vecteur
en sortie.}
}
\value{
Une liste contenant autant d'éléments que de formats si les données
avaient été générées par SAS via une \code{proc format}.
\itemize{
\item les noms de la liste correspondent aux noms des formats (\code{value $...}) ;
\item les éléments de la liste sont des vecteurs contenant les relations entre
valeurs initiales et valeurs converties.
}

Voir les exemples pour l'utilisation de cette liste.
}
\description{
Convertit les données contenues dans les \code{proc format} d'un programme SAS en
une liste de vecteurs qui pourra servir à effectuer des conversions.
}
\details{
La fonction ne recherche que les formats de type caractère (\code{value $nom}).
Les formats numériques sont ignorés (un message d'avertissement dresse une
liste de ces formats, s'ils sont présents).

Le programme peut se présenter sous la forme d'une chaîne unique de
caractères mais aussi d'un vecteur de plusieurs chaînes (typiquement le
résultat de la lecture d'un fichier par \link{readLines}). Les commentaires,
espaces et sauts de lignes surnuméraires sont autorisés. La casse du code SAS
(majuscule ou minuscule) est sans importance. Le programme peut en outre
contenir autre chose que des \code{proc format}.

La fonction détecte plusieurs valeurs séparées par des virgules à gauche du
signe \code{=}. En revanche, les intervalles de caractères (type \code{"A"-"Z"}) ne
sont pas gérés car ils contiennent un nombre indéfini de modalités possibles.
Les bornes de l'intervalle seront toutefois prises en compte (comme si
\code{"A","Z"} était écrit). La syntaxe sans les guillements (\code{A-Z}) est aussi
permise par SAS. Elle n'est \strong{pas prise en compte} et ces intervalles seront
ignorés.

Il est possible de choisir le type de guillemets (double ou simple) entourant
les valeurs. Un programme contenant un mélange de guillemets simples et
doubles ne fonctionnera pas.

Bien qu'elle ne puisse pas être utilisée directement pour faire des
conversions (nombre de modalités indéfini), la modalité SAS par défaut
\code{other} est aussi sauvegardée dans le résultat de fonction. Le nom associé
est par défaut \code{"."}. Il peut-être modifié.
}
\examples{
test_pgm <- readLines(
  system.file("extdata", "pgm_format_test.sas", package = "fmtsas")
)
cat(test_pgm, sep = "\\n")
conv <- from_pgm(test_pgm)

# Utilisation :

# soit un jeu de donnees contenant des codes a convertir en libelles
donnees <-
  data.frame(
    ACT_CODE = c("B", "C", "I", "W", "H"),
    stringsAsFactors = FALSE # la conversion ne marche pas sur des facteurs
  )

# pour remplacer les codes par les libelles (pour ACT_CODE)
donnees$ACT_LIB <- conv$a13_[donnees$ACT_CODE]

donnees
}
