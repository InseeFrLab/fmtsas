% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/from_tab.R
\name{from_tab}
\alias{from_tab}
\title{Convertit une table pour format SAS}
\usage{
from_tab(sas_data)
}
\arguments{
\item{sas_data}{un data.frame importé depuis une table SAS pour proc format.
Ce data.frame doit contenir a minima les colonnes \code{FMTNAME}, \code{START},
\code{LABEL} et \code{TYPE} (majuscule ou minuscule).}
}
\value{
Une liste contenant autant d'éléments que de formats si les données
avaient été générées par une proc format.
\itemize{
\item les noms de la liste correspondent aux noms des formats (\code{FMTNAME}) ;
\item les éléments de la liste sont des vecteurs contenant les relations entre
valeurs initiales et valeurs converties ;
\item chaque élément a un éventuel attribut \code{"other"} ;
\item chaque élément est un objet de type \code{\link{fmtsas_c}}, ce qui permet
d'utiliser l'\link[=extract.fmtsas_c]{opérateur de sélection} avec prise en
compte d'une valeur par défaut (\code{other}).
}

Voir les exemples pour l'utilisation de cette liste.
}
\description{
Convertit les données utilisées pour une proc format (option CNTLIN=) en une
liste de vecteurs qui pourra servir à effectuer des conversions.
}
\details{
La table en entrée est un data.frame, à importer dans R à partir d'une table
SAS (par exemple avec le package \strong{haven}).

Cette fonction ne gère pour l'instant que des formats caractère. De plus,
s'il y a une colonne \code{END} dans la table en entrée, elle doit être égale à la
colonne \code{START}.

La modalité SAS \code{other} (valeur par défaut), présente dans la table si une
colonne \code{HLO} existe et vaut \code{"O"}, est sauvegardée dans l'attribut
"other" pour chaque élément de la liste. Si le format SAS n'a pas de valeur
par défaut, l'attribut est quand même présent avec la valeur \code{NA}.
}
\examples{
# donnees en entree (provenant d'une table SAS)
format_data <-
  data.frame(
    FMTNAME = c( "fmt1_", "fmt1_", "fmt1_", "fmt1_",  "sexe",  "sexe"),
    TYPE    = c(     "C",     "C",     "C",     "C",     "C",     "C"),
    START   = c(     "A",     "B",     "C",      NA,     "1",     "2"),
    LABEL   = c(     "A",    "BC",    "BC", "ERROR", "Homme", "Femme"),
    HLO     = c(      NA,      NA,      NA,     "O",      NA,      NA)
  )

conv <- from_tab(format_data)

# Utilisation :

# soit un jeu de donnees contenant des codes a convertir en libelles
donnees <-
  data.frame(
    VAR1_CODE = c("A", "B", "A", "C", "Z",  NA),
    SEXE_CODE = c("1", "2", "1", "2",  NA, "Z")
  )

# pour remplacer les codes par les libelles (pour VAR1)
donnees$VAR1_LIB  <- conv$fmt1_[donnees$VAR1_CODE]
donnees$VAR1_LIB2 <- conv$fmt1_[donnees$VAR1_CODE, keep_na = TRUE]
donnees$SEXE_LIB  <- conv$sexe[donnees$SEXE_CODE]

donnees
}
\seealso{
\link{from_pgm} pour importer les formats contenus dans un programme SAS.
}
